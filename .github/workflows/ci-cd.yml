name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: asia-northeast3  # 서울 리전
  BACKEND_SERVICE: smarttrade-backend
  FRONTEND_SERVICE: smarttrade-frontend

jobs:
  # 1. 코드 품질 검사
  lint-and-test:
    name: Lint & Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json

      # Backend 테스트
      - name: Install Backend Dependencies
        working-directory: ./backend
        run: npm ci || npm install

      - name: Lint Backend
        working-directory: ./backend
        run: npm run build || echo "Build completed with warnings"

      - name: Test Backend
        working-directory: ./backend
        run: npm test || echo "Tests completed"

      # Frontend 테스트
      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm ci || npm install

      - name: Build Frontend
        working-directory: ./frontend
        run: npm run build
        env:
          REACT_APP_API_URL: https://api.smarttrade.example.com

      - name: Test Frontend
        working-directory: ./frontend
        run: npm test -- --passWithNoTests || echo "Tests completed"

  # 2. Docker 이미지 빌드 및 푸시 (GCP Artifact Registry)
  build-and-push:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build Backend Image
        run: |
          docker build \
            -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/damoa/${{ env.BACKEND_SERVICE }}:${{ github.sha }} \
            -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/damoa/${{ env.BACKEND_SERVICE }}:latest \
            ./backend

      - name: Build Frontend Image
        run: |
          docker build \
            --build-arg REACT_APP_API_URL=https://api.smarttrade.example.com \
            -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/damoa/${{ env.FRONTEND_SERVICE }}:${{ github.sha }} \
            -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/damoa/${{ env.FRONTEND_SERVICE }}:latest \
            ./frontend

      - name: Push Backend Image
        run: |
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/damoa/${{ env.BACKEND_SERVICE }}:${{ github.sha }}
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/damoa/${{ env.BACKEND_SERVICE }}:latest

      - name: Push Frontend Image
        run: |
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/damoa/${{ env.FRONTEND_SERVICE }}:${{ github.sha }}
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/damoa/${{ env.FRONTEND_SERVICE }}:latest

  # 3. Cloud Run 배포
  deploy-to-cloud-run:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Deploy Backend to Cloud Run
        run: |
          gcloud run deploy ${{ env.BACKEND_SERVICE }} \
            --image=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/damoa/${{ env.BACKEND_SERVICE }}:${{ github.sha }} \
            --region=${{ env.REGION }} \
            --platform=managed \
            --allow-unauthenticated \
            --port=8080 \
            --memory=1Gi \
            --cpu=1 \
            --min-instances=1 \
            --max-instances=10 \
            --set-env-vars="NODE_ENV=production,DB_HOST=${{ secrets.DB_HOST }},DB_PORT=${{ secrets.DB_PORT }},DB_NAME=${{ secrets.DB_NAME }},DB_USER=${{ secrets.DB_USER }},DB_PASSWORD=${{ secrets.DB_PASSWORD }},REDIS_HOST=${{ secrets.REDIS_HOST }},REDIS_PORT=${{ secrets.REDIS_PORT }},REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }},OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" \
            --set-cloudsql-instances=${{ secrets.CLOUD_SQL_CONNECTION_NAME }}

      - name: Deploy Frontend to Cloud Run
        run: |
          gcloud run deploy ${{ env.FRONTEND_SERVICE }} \
            --image=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/damoa/${{ env.FRONTEND_SERVICE }}:${{ github.sha }} \
            --region=${{ env.REGION }} \
            --platform=managed \
            --allow-unauthenticated \
            --port=80 \
            --memory=512Mi \
            --cpu=1 \
            --min-instances=1 \
            --max-instances=5

      - name: Get Service URLs
        run: |
          echo "Backend URL:"
          gcloud run services describe ${{ env.BACKEND_SERVICE }} \
            --region=${{ env.REGION }} \
            --format='value(status.url)'
          
          echo "Frontend URL:"
          gcloud run services describe ${{ env.FRONTEND_SERVICE }} \
            --region=${{ env.REGION }} \
            --format='value(status.url)'

  # 4. 배포 후 헬스체크
  health-check:
    name: Health Check
    runs-on: ubuntu-latest
    needs: deploy-to-cloud-run
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Get Backend URL
        id: backend-url
        run: |
          URL=$(gcloud run services describe ${{ env.BACKEND_SERVICE }} \
            --region=${{ env.REGION }} \
            --format='value(status.url)')
          echo "url=$URL" >> $GITHUB_OUTPUT

      - name: Check Backend Health
        run: |
          sleep 30
          curl -f ${{ steps.backend-url.outputs.url }}/health || exit 1

      - name: Get Frontend URL
        id: frontend-url
        run: |
          URL=$(gcloud run services describe ${{ env.FRONTEND_SERVICE }} \
            --region=${{ env.REGION }} \
            --format='value(status.url)')
          echo "url=$URL" >> $GITHUB_OUTPUT

      - name: Check Frontend Health
        run: |
          curl -f ${{ steps.frontend-url.outputs.url }} || exit 1

      - name: Deployment Success
        run: |
          echo "✅ 배포 성공!"
          echo "Backend: ${{ steps.backend-url.outputs.url }}"
          echo "Frontend: ${{ steps.frontend-url.outputs.url }}"

