# GitHub Actions - Docker 빌드 및 배포
# 메인 브랜치에 푸시 시 자동 빌드 및 배포

name: Docker Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/smarttrade-backend:latest
            ${{ secrets.DOCKER_USERNAME }}/smarttrade-backend:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/smarttrade-backend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/smarttrade-backend:buildcache,mode=max

      - name: Build and push Frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          build-args: |
            REACT_APP_API_URL=${{ secrets.API_URL }}
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/smarttrade-frontend:latest
            ${{ secrets.DOCKER_USERNAME }}/smarttrade-frontend:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/smarttrade-frontend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/smarttrade-frontend:buildcache,mode=max

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /opt/smarttrade
            docker-compose pull
            docker-compose up -d --remove-orphans
            docker image prune -f

      - name: Run Database Migration
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /opt/smarttrade
            docker-compose exec -T backend npm run db:migrate

      - name: Health Check
        run: |
          echo "🏥 헬스체크 시작..."
          sleep 30
          
          response=$(curl -s -o /dev/null -w "%{http_code}" ${{ secrets.API_URL }}/health)
          
          if [ "$response" -eq 200 ]; then
            echo "✅ 서비스 정상 작동 중"
          else
            echo "❌ 서비스 헬스체크 실패 (HTTP $response)"
            exit 1
          fi

      - name: Send Deployment Notification
        if: always()
        run: |
          echo "📨 배포 완료 알림"
          # 슬랙, 디스코드 등으로 배포 결과 알림

